version: '3.7'
services:
  api:
    build:
      context: ./containers/api
      dockerfile: Dockerfile
    container_name: portfolio_backend
    environment:
      DB_HOST: postgres
      DB_DATABASE: dev
      DB_USERNAME: dev
      DB_PASSWORD: dev
    ports:
      - "8000:8000"
    volumes:
      - ./containers/api:/app/api
      - ./containers/api/storage/logs/:/app/api/storage/logs/
      - ./containers/nginx/php-conf/php.ini:/usr/local/etc/php/php.ini
      - ./containers/nginx/php-conf/www.conf:/usr/local/etc/php-fpm.d/www.conf
    depends_on:
      - postgres
      - redis
    networks:
      - app

  view:
    build:
      context: ./containers/view
      dockerfile: Dockerfile
    tty: true
    container_name: portfolio_frontend
    ports:
      - "3000:3000"
    volumes:
      - ./containers/view:/app/view
    depends_on:
      - api
    networks:
      - app

  redis:
    image: redis:alpine
    container_name: portfolio_redis
    expose:
      - "6379"
    networks:
      - app

  webserver:
    image: nginx:alpine
    container_name: portfolio_webserver
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    volumes:
      - ./containers/nginx/conf/:/etc/nginx/conf.d
      - ./logs/nginx/:/var/log/nginx/
    networks:
      - app

  postgres:
    image: postgres:14.3-alpine
    container_name: portfolio_database
    ports:
      - 5432:5432
    restart: always
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./logs/postgres/:/usr/local/var/log/postgres.log
    environment:
      POSTGRES_DB: dev
      POSTGRES_PASSWORD: dev
      POSTGRES_USER: dev
    networks:
      - app

networks:
  app:
    driver: bridge